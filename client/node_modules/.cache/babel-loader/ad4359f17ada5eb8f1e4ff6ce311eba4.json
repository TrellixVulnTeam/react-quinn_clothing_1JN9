{"ast":null,"code":"import { collection } from \"firebase/firestore\";\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nimport { ShopActionTypes } from \"./shop.types\"; // export const updateCollections = (collectionsMap) => ({\n//     type: ShopActionTypes.UPDATE_COLLECTIONS,\n//     payload: collectionsMap\n// })\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = error => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: error\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = collection(firestore, 'collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapShot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapShot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n      this.setState({\n        loading: false\n      });\n    }).catch(error => dispatch(fetchCollectionsFailure(error)));\n  };\n};","map":{"version":3,"sources":["D:/Programming/Web/node/react-101/crwn-clothing/src/redux/shop/shop.action.js"],"names":["collection","convertCollectionsSnapshotToMap","firestore","ShopActionTypes","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","error","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","get","then","snapShot","setState","loading","catch"],"mappings":"AAAA,SAASA,UAAT,QAA2B,oBAA3B;AACA,SAASC,+BAAT,EAA0CC,SAA1C,QAA2D,+BAA3D;AACA,SAASC,eAAT,QAAgC,cAAhC,C,CAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEF,eAAe,CAACG;AADkB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,cAAD,KAAqB;AACxDH,EAAAA,IAAI,EAAEF,eAAe,CAACM,yBADkC;AAExDC,EAAAA,OAAO,EAAEF;AAF+C,CAArB,CAAhC;AAKP,OAAO,MAAMG,uBAAuB,GAAIC,KAAD,KAAY;AAC/CP,EAAAA,IAAI,EAAEF,eAAe,CAACU,yBADyB;AAE/CH,EAAAA,OAAO,EAAEE;AAFsC,CAAZ,CAAhC;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC5C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGhB,UAAU,CAACE,SAAD,EAAY,aAAZ,CAAhC;AACAa,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CAACC,GAAd,GAAoBC,IAApB,CAA0BC,QAAQ,IAAI;AAClC,YAAMX,cAAc,GAAGP,+BAA+B,CAACkB,QAAD,CAAtD;AACAJ,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACA,WAAKY,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAJD,EAIGC,KAJH,CAISV,KAAK,IAAIG,QAAQ,CAACJ,uBAAuB,CAACC,KAAD,CAAxB,CAJ1B;AAMH,GAVD;AAWH,CAZM","sourcesContent":["import { collection } from \"firebase/firestore\";\r\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\r\nimport { ShopActionTypes } from \"./shop.types\";\r\n\r\n// export const updateCollections = (collectionsMap) => ({\r\n//     type: ShopActionTypes.UPDATE_COLLECTIONS,\r\n//     payload: collectionsMap\r\n// })\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_START,\r\n});\r\n\r\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n    payload: collectionsMap\r\n});\r\n\r\nexport const fetchCollectionsFailure = (error) => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n    payload: error\r\n})\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n    return dispatch => {\r\n        const collectionRef = collection(firestore, 'collections');\r\n        dispatch(fetchCollectionsStart())\r\n\r\n        collectionRef.get().then( snapShot => {\r\n            const collectionsMap = convertCollectionsSnapshotToMap(snapShot)\r\n            dispatch(fetchCollectionsSuccess(collectionsMap));\r\n            this.setState({ loading: false });\r\n        }).catch(error => dispatch(fetchCollectionsFailure(error)));\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}