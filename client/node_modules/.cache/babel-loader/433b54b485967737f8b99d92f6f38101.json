{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\Web\\\\node\\\\react-101\\\\crwn-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React, { Component } from 'react';\nimport CustomButton from '../custom-button/custom-button.component';\nimport FormInput from '../form-input/form-input.component';\nimport { connect } from 'react-redux'; // import { auth, signInWithGoogle } from '../../firebase/firebase.utils'\n\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { googleSignInStart } from '../../redux/user/user.actions'; // import './sign-in.styles.scss'\n\nimport { ButtonContainer, SignInContainer, SignInTitle } from './sign-in.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state; // try {\n      //     await signInWithEmailAndPassword(auth, email, password);\n      //     this.setState({ email: '', password: '' })\n      // } catch (error) {\n      //     console.error(error);\n      // }\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(SignInContainer, {\n      children: [/*#__PURE__*/_jsxDEV(SignInTitle, {\n        children: \"I already have an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign in with your email and password.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"email\",\n          name: \"email\",\n          value: this.state.email,\n          handleChange: this.handleChange,\n          label: \"Emais\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"password\",\n          name: \"password\",\n          value: this.state.password,\n          handleChange: this.handleChange,\n          label: \"Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n          children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"submit\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"button\",\n            onClick: googleSignInStart,\n            isGoogleSignIn: true,\n            children: \"Sign In With Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["D:/Programming/Web/node/react-101/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","Component","CustomButton","FormInput","connect","signInWithEmailAndPassword","googleSignInStart","ButtonContainer","SignInContainer","SignInTitle","SignIn","constructor","props","handleSubmit","event","preventDefault","email","password","state","handleChange","value","name","target","setState","render","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,SAASC,0BAAT,QAA2C,eAA3C;AACA,SAASC,iBAAT,QAAkC,+BAAlC,C,CAEA;;AACA,SAASC,eAAT,EAA0BC,eAA1B,EAA2CC,WAA3C,QAA8D,kBAA9D;;;AAEA,MAAMC,MAAN,SAAqBT,SAArB,CAA+B;AAC3BU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,YATmB,GASJ,MAAMC,KAAN,IAAe;AAC1BA,MAAAA,KAAK,CAACC,cAAN;AAEA,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAsB,KAAKC,KAAjC,CAH0B,CAK1B;AACA;AACA;AACA;AACA;AACA;AAEH,KArBkB;;AAAA,SAuBnBC,YAvBmB,GAuBJL,KAAK,IAAI;AACpB,YAAM;AAAEM,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAkBP,KAAK,CAACQ,MAA9B;AAEA,WAAKC,QAAL,CAAc;AAAE,SAACF,IAAD,GAAQD;AAAV,OAAd;AACH,KA3BkB;;AAGf,SAAKF,KAAL,GAAa;AACTF,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIH;;AAsBDO,EAAAA,MAAM,GAAG;AACL,UAAM;AAAElB,MAAAA;AAAF,QAAwB,KAAKM,KAAnC;AAEA,wBACI,QAAC,eAAD;AAAA,8BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII;AAAM,QAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA,gCACI,QAAC,SAAD;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,IAAI,EAAC,OAFT;AAGI,UAAA,KAAK,EAAE,KAAKK,KAAL,CAAWF,KAHtB;AAII,UAAA,YAAY,EAAE,KAAKG,YAJvB;AAKI,UAAA,KAAK,EAAC,OALV;AAMI,UAAA,QAAQ;AANZ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI,QAAC,SAAD;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,IAAI,EAAC,UAFT;AAGI,UAAA,KAAK,EAAE,KAAKD,KAAL,CAAWD,QAHtB;AAII,UAAA,YAAY,EAAE,KAAKE,YAJvB;AAKI,UAAA,KAAK,EAAC,UALV;AAMI,UAAA,QAAQ;AANZ;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAmBI,QAAC,eAAD;AAAA,kCACI,QAAC,YAAD;AAAc,YAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,YAAD;AACI,YAAA,IAAI,EAAC,QADT;AAEI,YAAA,OAAO,EAAGb,iBAFd;AAGI,YAAA,cAAc,MAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAmCH;;AApE0B;;AAuE/B,MAAMmB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCpB,EAAAA,iBAAiB,EAAE,MAAMoB,QAAQ,CAACpB,iBAAiB,EAAlB;AADG,CAAL,CAAnC;;AAIA,eAAeF,OAAO,CAAC,IAAD,EAAOqB,kBAAP,CAAP,CAAkCf,MAAlC,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport CustomButton from '../custom-button/custom-button.component'\r\nimport FormInput from '../form-input/form-input.component'\r\nimport { connect } from 'react-redux'\r\n\r\n// import { auth, signInWithGoogle } from '../../firebase/firebase.utils'\r\nimport { signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { googleSignInStart } from '../../redux/user/user.actions';\r\n\r\n// import './sign-in.styles.scss'\r\nimport { ButtonContainer, SignInContainer, SignInTitle } from './sign-in.styles';\r\n\r\nclass SignIn extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n    \r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        const { email, password } = this.state;\r\n\r\n        // try {\r\n        //     await signInWithEmailAndPassword(auth, email, password);\r\n        //     this.setState({ email: '', password: '' })\r\n        // } catch (error) {\r\n        //     console.error(error);\r\n        // }\r\n\r\n    }\r\n\r\n    handleChange = event => {\r\n        const { value, name } = event.target;\r\n\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    render() {\r\n        const { googleSignInStart } = this.props\r\n\r\n        return (\r\n            <SignInContainer>\r\n                <SignInTitle>I already have an account</SignInTitle>\r\n                <span>Sign in with your email and password.</span>\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormInput \r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={this.state.email}\r\n                        handleChange={this.handleChange}\r\n                        label=\"Emais\"\r\n                        required\r\n                    />\r\n                    {/* <label htmlFor=\"email\">Email</label> */}\r\n                    <FormInput\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={this.state.password}\r\n                        handleChange={this.handleChange}\r\n                        label=\"Password\"\r\n                        required\r\n                    />\r\n                    {/* <label htmlFor=\"password\">Password</label> */}\r\n                    <ButtonContainer>\r\n                        <CustomButton type=\"submit\">Sign In</CustomButton>\r\n                        <CustomButton \r\n                            type=\"button\"\r\n                            onClick={ googleSignInStart }\r\n                            isGoogleSignIn\r\n                        >Sign In With Google</CustomButton>\r\n                    </ButtonContainer>\r\n                </form>\r\n            </SignInContainer>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart())\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn)\r\n"]},"metadata":{},"sourceType":"module"}