{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\Web\\\\node\\\\react-101\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { collection, onSnapshot, SnapshotMetadata } from 'firebase/firestore';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport { updateCollections } from '../../redux/shop/shop.action'; // import CategoryPage from '../category/category.component';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShopPage extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = collection(firestore, 'collections');\n    onSnapshot(collectionRef, async snapShot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapShot);\n      console.log(collectionsMap);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: /*#__PURE__*/_jsxDEV(CollectionsOverview, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["D:/Programming/Web/node/react-101/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","connect","collection","onSnapshot","SnapshotMetadata","firestore","convertCollectionsSnapshotToMap","CollectionsOverview","updateCollections","ShopPage","Component","unsubscribeFromSnapshot","componentDidMount","collectionRef","snapShot","collectionsMap","console","log","render","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,gBAAjC,QAAyD,oBAAzD;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,SAASC,iBAAT,QAAkC,8BAAlC,C,CACA;;;;AAEA,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCC,uBAFmC,GAET,IAFS;AAAA;;AAInCC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,aAAa,GAAGX,UAAU,CAACG,SAAD,EAAY,aAAZ,CAAhC;AAEAF,IAAAA,UAAU,CAAEU,aAAF,EAAiB,MAAOC,QAAP,IAAoB;AAC3C,YAAMC,cAAc,GAAGT,+BAA+B,CAACQ,QAAD,CAAtD;AAEAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;AACH,KAJS,CAAV;AAKH;;AAEDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BAKI,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAxBkC;;AAyBtC;;AAED,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCZ,EAAAA,iBAAiB,EAAEO,cAAc,IAAIK,QAAQ,CAACZ,iBAAiB,CAACO,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAIA,eAAed,OAAO,CAAC,IAAD,EAAOkB,kBAAP,CAAP,CAAkCV,QAAlC,CAAf","sourcesContent":["import React from 'react'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { collection, onSnapshot, SnapshotMetadata } from 'firebase/firestore';\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\nimport { updateCollections } from '../../redux/shop/shop.action';\r\n// import CategoryPage from '../category/category.component';\r\n\r\nclass ShopPage extends React.Component {\r\n\r\n    unsubscribeFromSnapshot = null;\r\n\r\n    componentDidMount() {\r\n        const collectionRef = collection(firestore, 'collections');\r\n\r\n        onSnapshot( collectionRef, async (snapShot) => {\r\n            const collectionsMap = convertCollectionsSnapshotToMap(snapShot)\r\n\r\n            console.log(collectionsMap);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"shop-page\" >\r\n                {/* <Routes>\r\n                    <Route exact path={`${location.pathname}`} element={<CollectionsOverview />} />\r\n                    <Route path={`${location.pathname}/:categoryId`} element={<CategoryPage />} />\r\n                </Routes> */}\r\n                <CollectionsOverview />\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}