{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nimport { ShopActionTypes } from './shop.types';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.action';\nexport function* fetchCollectionsAsync() {\n  yield console.log('i am fired');\n\n  try {\n    const collectionRef = collection(firestore, 'collections');\n    const snapShot = yield getDocs(collectionRef);\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapShot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["D:/Programming/Web/node/react-101/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","all","collection","getDocs","convertCollectionsSnapshotToMap","firestore","ShopActionTypes","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","snapShot","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,oBAApC;AACA,SAAQC,+BAAR,EAAyCC,SAAzC,QAA0D,+BAA1D;AAEA,SAASC,eAAT,QAAgC,cAAhC;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,eAAjE;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AAEA,MAAI;AAEA,UAAMC,aAAa,GAAGV,UAAU,CAACG,SAAD,EAAY,aAAZ,CAAhC;AACA,UAAMQ,QAAQ,GAAG,MAAMV,OAAO,CAACS,aAAD,CAA9B;AACA,UAAME,cAAc,GAAG,MAAMf,IAAI,CAACK,+BAAD,EAAkCS,QAAlC,CAAjC;AACA,UAAMb,GAAG,CAACO,uBAAuB,CAACO,cAAD,CAAxB,CAAT;AAEH,GAPD,CAOE,OAAOC,KAAP,EAAc;AACZ,UAAMf,GAAG,CAACQ,uBAAuB,CAACO,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AAEJ;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMnB,UAAU,CACZQ,eAAe,CAACY,uBADJ,EAEZT,qBAFY,CAAhB;AAIH;AAED,OAAO,UAAUU,SAAV,GAAsB;AACzB,QAAMlB,GAAG,CAAC,CACNF,IAAI,CAACkB,qBAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects'\r\nimport { collection, getDocs } from \"firebase/firestore\";\r\nimport {convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\r\n\r\nimport { ShopActionTypes } from './shop.types'\r\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.action';\r\n\r\nexport function* fetchCollectionsAsync() {\r\n    yield console.log('i am fired');\r\n\r\n    try {\r\n\r\n        const collectionRef = collection(firestore, 'collections');\r\n        const snapShot = yield getDocs(collectionRef);\r\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapShot);    \r\n        yield put(fetchCollectionsSuccess(collectionsMap));\r\n\r\n    } catch (error) {\r\n        yield put(fetchCollectionsFailure(error.message));\r\n    }\r\n\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n    yield takeLatest(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionsAsync\r\n    );\r\n}\r\n\r\nexport function* shopSagas() {\r\n    yield all([\r\n        call(fetchCollectionsStart)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}