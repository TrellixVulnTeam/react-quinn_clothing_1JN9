{"ast":null,"code":"import { getDoc } from \"firebase/firestore\";\nimport { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport { signInWithEmailAndPassword, signInWithPopup } from \"firebase/auth\";\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure } from \"./user.actions\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport UserActionTypes from \"./user.types\";\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield signInWithPopup(auth, googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield call(getDoc, userRef);\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail(_ref) {\n  let {\n    payload: {\n      email,\n      password\n    }\n  } = _ref;\n\n  try {\n    const {\n      user\n    } = yield signInWithEmailAndPassword(auth, email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield call(getDoc, userRef);\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n\n    if (!userAuth) {\n      return;\n    } else {\n      const userRef = yield call(createUserProfileDocument, userAuth);\n      const userSnapshot = yield call(getDoc, userRef);\n      yield put(signInSuccess({\n        id: userSnapshot.id,\n        ...userSnapshot.data()\n      }));\n    }\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["D:/Programming/Web/node/react-101/crwn-clothing/src/redux/user/user.sagas.js"],"names":["getDoc","takeLatest","put","all","call","signInWithEmailAndPassword","signInWithPopup","signInSuccess","signInFailure","signOutSuccess","signOutFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","UserActionTypes","signInWithGoogle","user","userRef","userSnapshot","id","data","error","signInWithEmail","payload","email","password","isUserAuthenticated","userAuth","signOut","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import { getDoc } from \"firebase/firestore\";\r\nimport { takeLatest, put, all, call } from \"redux-saga/effects\";\r\nimport { signInWithEmailAndPassword, signInWithPopup } from \"firebase/auth\";\r\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure } from \"./user.actions\";\r\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\r\n\r\nimport UserActionTypes from \"./user.types\";\r\n\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const { user } = yield signInWithPopup(auth, googleProvider);\r\n        const userRef = yield call(createUserProfileDocument,user);\r\n        const userSnapshot = yield call(getDoc, userRef);\r\n        yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n    try {\r\n        const { user } = yield signInWithEmailAndPassword(auth, email, password);\r\n        const userRef = yield call(createUserProfileDocument,user);\r\n        const userSnapshot = yield call(getDoc, userRef);\r\n        yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n    try {\r\n        const userAuth = yield getCurrentUser();\r\n        if(!userAuth){\r\n            return;\r\n        }\r\n        else {\r\n            const userRef = yield call(createUserProfileDocument,userAuth);\r\n            const userSnapshot = yield call(getDoc, userRef);\r\n            yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n        }\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* signOut() {\r\n    try {\r\n        yield auth.signOut();\r\n        yield put(signOutSuccess());\r\n    } catch (error) {\r\n        yield put(signOutFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onEmailSignInStart),\r\n        call(onCheckUserSession),\r\n        call(onSignOutStart)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}