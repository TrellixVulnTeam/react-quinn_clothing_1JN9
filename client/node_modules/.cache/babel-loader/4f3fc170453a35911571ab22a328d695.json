{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleware from 'redux-saga'; // import thunk from \"redux-thunk\";\n// import { fetchCollectionsAsync } from \"./shop/shop.sagas\";\n\nimport rootReducer from \"./root-reducer\";\nimport rootSaga from \"./root-saga\";\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [// thunk\nsagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares)); // sagaMiddleware.run(fetchCollectionsAsync)\n\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store); // export default { store, persistor };","map":{"version":3,"sources":["D:/Programming/Web/node/react-101/crwn-clothing/client/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","createSagaMiddleware","rootReducer","rootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,oBAAP,MAAiC,YAAjC,C,CACA;AAEA;;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AAEA,MAAMI,WAAW,GAAG,CAChB;AACAD,cAFgB,CAApB;;AAKA,IAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA5B,EAA0C;AACtCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBT,MAAjB;AACH;;AAED,OAAO,MAAMU,KAAK,GAAGb,WAAW,CAACK,WAAD,EAAcJ,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB,C,CAEP;;AACAD,cAAc,CAACO,GAAf,CAAmBR,QAAnB;AAEA,OAAO,MAAMS,SAAS,GAAGb,YAAY,CAACW,KAAD,CAA9B,C,CAEP","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport { persistStore } from \"redux-persist\";\r\nimport logger from \"redux-logger\";\r\nimport createSagaMiddleware from 'redux-saga'\r\n// import thunk from \"redux-thunk\";\r\n\r\n// import { fetchCollectionsAsync } from \"./shop/shop.sagas\";\r\nimport rootReducer from \"./root-reducer\";\r\nimport rootSaga from \"./root-saga\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [\r\n    // thunk\r\n    sagaMiddleware\r\n];\r\n\r\nif(process.env.NODE_ENV === 'development'){\r\n    middlewares.push(logger);\r\n}\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\n// sagaMiddleware.run(fetchCollectionsAsync)\r\nsagaMiddleware.run(rootSaga)\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n// export default { store, persistor };"]},"metadata":{},"sourceType":"module"}