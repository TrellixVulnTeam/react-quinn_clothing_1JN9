{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\Web\\\\node\\\\react-101\\\\crwn-clothing\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { createUserWithEmailAndPassword } from 'firebase/auth'; // import './sign-up.styles.scss'\n\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        displayName,\n        email,\n        password,\n        confirmPassword\n      } = this.state;\n      const {\n        signUpStart\n      } = this.props;\n\n      if (password !== confirmPassword) {\n        alert(\"password don't match!\");\n        return;\n      } // try {\n      //     const { user } = await createUserWithEmailAndPassword(auth, email, password);\n      //     await createUserProfileDocument(user, { displayName });\n      //     this.setState({\n      //         displayName: '',\n      //         email: '',\n      //         password: '',\n      //         confirmPassword:''\n      //     })\n      // } catch (error) {\n      //     console.error(error);\n      // }\n\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(SignUpContainer, {\n      children: [/*#__PURE__*/_jsxDEV(SignUpTitle, {\n        children: \"I do not have an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign up with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: \"sign-up-form\",\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"text\",\n          name: \"displayName\",\n          value: displayName,\n          handleChange: this.handleChange,\n          label: \"Display Name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"email\",\n          name: \"email\",\n          value: email,\n          handleChange: this.handleChange,\n          label: \"Email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"password\",\n          name: \"password\",\n          value: password,\n          handleChange: this.handleChange,\n          label: \"Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"password\",\n          name: \"confirmPassword\",\n          value: confirmPassword,\n          handleChange: this.handleChange,\n          label: \"Confirm Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"SIGN UP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (displayName, email, password) => dispatch(signUpStart({\n    displayName,\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["D:/Programming/Web/node/react-101/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","Component","connect","FormInput","CustomButton","auth","createUserProfileDocument","createUserWithEmailAndPassword","SignUpContainer","SignUpTitle","signUpStart","SignUp","constructor","props","handleSubmit","event","preventDefault","displayName","email","password","confirmPassword","state","alert","handleChange","name","value","target","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport FormInput from '../form-input/form-input.component'\r\nimport CustomButton from '../custom-button/custom-button.component'\r\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils'\r\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\r\n\r\n// import './sign-up.styles.scss'\r\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\r\nimport { signUpStart } from '../../redux/user/user.actions';\r\n\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            displayName: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword:''\r\n        }\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n        const { displayName, email, password, confirmPassword } = this.state;\r\n        const { signUpStart } = this.props\r\n\r\n        if (password !== confirmPassword) {\r\n            alert(\"password don't match!\");\r\n            return;\r\n        }\r\n\r\n        // try {\r\n        //     const { user } = await createUserWithEmailAndPassword(auth, email, password);\r\n            \r\n        //     await createUserProfileDocument(user, { displayName });\r\n\r\n        //     this.setState({\r\n        //         displayName: '',\r\n        //         email: '',\r\n        //         password: '',\r\n        //         confirmPassword:''\r\n        //     })\r\n        // } catch (error) {\r\n        //     console.error(error);\r\n        // }\r\n    }\r\n\r\n    handleChange = event => {\r\n        const { name, value } = event.target;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    render() {\r\n        const { displayName, email, password, confirmPassword } = this.state;\r\n        return (\r\n            <SignUpContainer>\r\n                <SignUpTitle>I do not have an account</SignUpTitle>\r\n                <span>Sign up with your email and password</span>\r\n                <form onSubmit={this.handleSubmit} className=\"sign-up-form\">\r\n                    <FormInput\r\n                        type=\"text\"\r\n                        name=\"displayName\"\r\n                        value={displayName}\r\n                        handleChange={this.handleChange}\r\n                        label=\"Display Name\"\r\n                        required\r\n                    />\r\n                    <FormInput\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        handleChange={this.handleChange}\r\n                        label=\"Email\"\r\n                        required\r\n                    />\r\n                    <FormInput\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        handleChange={this.handleChange}\r\n                        label=\"Password\"\r\n                        required\r\n                    />\r\n                    <FormInput\r\n                        type=\"password\"\r\n                        name=\"confirmPassword\"\r\n                        value={confirmPassword}\r\n                        handleChange={this.handleChange}\r\n                        label=\"Confirm Password\"\r\n                        required\r\n                    />\r\n                    <CustomButton type=\"submit\">SIGN UP</CustomButton>\r\n                </form>\r\n            </SignUpContainer>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart: (displayName, email, password) => dispatch(signUpStart({ displayName, email, password }))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}