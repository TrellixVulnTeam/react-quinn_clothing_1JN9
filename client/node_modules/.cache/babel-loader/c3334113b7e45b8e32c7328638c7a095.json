{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\Web\\\\node\\\\react-101\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { collection, onSnapshot } from 'firebase/firestore';\nimport { updateCollections } from '../../redux/shop/shop.action';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionPage from '../collection/collection.component';\nimport { Outlet, Route, Routes } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionsPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = collection(firestore, 'collections');\n    onSnapshot(collectionRef, async snapShot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapShot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: `/shop`,\n          element: /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 52\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: `/`,\n            element: /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n              isLoading: loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: `:collectionId`,\n            element: /*#__PURE__*/_jsxDEV(CollectionsPageWithSpinner, {\n              isLoading: loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionsPageWithSpinner\");","map":{"version":3,"sources":["D:/Programming/Web/node/react-101/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","connect","collection","onSnapshot","updateCollections","firestore","convertCollectionsSnapshotToMap","CollectionsOverview","WithSpinner","CollectionPage","Outlet","Route","Routes","CollectionsOverviewWithSpinner","CollectionsPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","snapShot","collectionsMap","setState","render","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,oBAAvC;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,MAAxB,QAAsC,kBAAtC;;AAGA,MAAMC,8BAA8B,GAAGL,WAAW,CAACD,mBAAD,CAAlD;KAAMM,8B;AACN,MAAMC,0BAA0B,GAAGN,WAAW,CAACC,cAAD,CAA9C;MAAMK,0B;;AAEN,MAAMC,QAAN,SAAuBf,KAAK,CAACgB,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACJC,MAAAA,OAAO,EAAE;AADL,KAD2B;AAAA,SAKnCC,uBALmC,GAKT,IALS;AAAA;;AAOnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEhB,MAAAA;AAAF,QAAwB,KAAKiB,KAAnC;AACA,UAAMC,aAAa,GAAGpB,UAAU,CAACG,SAAD,EAAY,aAAZ,CAAhC;AAEAF,IAAAA,UAAU,CAAEmB,aAAF,EAAiB,MAAOC,QAAP,IAAoB;AAC3C,YAAMC,cAAc,GAAGlB,+BAA+B,CAACiB,QAAD,CAAtD;AAEAnB,MAAAA,iBAAiB,CAACoB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAEP,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KALS,CAAV;AAMH;;AAEDQ,EAAAA,MAAM,GAAG;AACL,UAAM;AAAER,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI,QAAC,MAAD;AAAA,+BAII,QAAC,KAAD;AAAO,UAAA,IAAI,EAAG,OAAd;AAAsB,UAAA,OAAO,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBAA/B;AAAA,kCACI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAG,GAAd;AAAkB,YAAA,OAAO,eAAG,QAAC,8BAAD;AAAgC,cAAA,SAAS,EAAEC;AAA3C;AAAA;AAAA;AAAA;AAAA;AAA5B;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAG,eAAd;AAA8B,YAAA,OAAO,eAAE,QAAC,0BAAD;AAA4B,cAAA,SAAS,EAAEA;AAAvC;AAAA;AAAA;AAAA;AAAA;AAAvC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;;AAnCkC;;AAoCtC;;AAED,MAAMS,kBAAkB,GAAGC,QAAQ,KAAK;AACpCxB,EAAAA,iBAAiB,EAAEoB,cAAc,IAAII,QAAQ,CAACxB,iBAAiB,CAACoB,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAIA,eAAevB,OAAO,CAAC,IAAD,EAAO0B,kBAAP,CAAP,CAAkCZ,QAAlC,CAAf","sourcesContent":["import React from 'react'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { collection, onSnapshot } from 'firebase/firestore';\r\nimport { updateCollections } from '../../redux/shop/shop.action';\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\nimport CollectionPage from '../collection/collection.component';\r\nimport { Outlet, Route, Routes } from 'react-router-dom';\r\n\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component {\r\n    state = {\r\n        loading: true\r\n    };\r\n\r\n    unsubscribeFromSnapshot = null;\r\n\r\n    componentDidMount() {\r\n        const { updateCollections } = this.props;\r\n        const collectionRef = collection(firestore, 'collections');\r\n\r\n        onSnapshot( collectionRef, async (snapShot) => {\r\n            const collectionsMap = convertCollectionsSnapshotToMap(snapShot)\r\n\r\n            updateCollections(collectionsMap);\r\n            this.setState({ loading: false });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { loading } = this.state;\r\n        return (\r\n            <div className=\"shop-page\" >\r\n                <Routes>\r\n                    {/* <Route path={`/shop`} element={ (props) => <CollectionsOverviewWithSpinner isLoading={loading} {...props} /> } >\r\n                        <Route path={`:collectionId`} element={ (props) => <CollectionsPageWithSpinner isLoading={loading} {...props} />} />\r\n                    </Route> */}\r\n                    <Route path={`/shop`} element={<Outlet />} >\r\n                        <Route path={`/`} element={ <CollectionsOverviewWithSpinner isLoading={loading}/> } />\r\n                        <Route path={`:collectionId`} element={<CollectionsPageWithSpinner isLoading={loading}/>} />\r\n                    </Route>\r\n                </Routes>\r\n                {/* <CollectionsOverviewWithSpinner isLoading={loading} /> */}\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}