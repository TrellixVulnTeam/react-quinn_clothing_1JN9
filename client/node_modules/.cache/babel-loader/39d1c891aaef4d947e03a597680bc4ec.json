{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nimport { ShopActionTypes } from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('i am fired');\n  const collectionRef = collection(firestore, 'collections');\n  dispatch(fetchCollectionsStart());\n  getDocs(collectionRef).then(snapShot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapShot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["D:/Programming/Web/node/react-101/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","convertCollectionsSnapshotToMap","firestore","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","dispatch","fetchCollectionsStart","getDocs","then","snapShot","collectionsMap","fetchCollectionsSuccess","catch","error","fetchCollectionsFailure","message","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAASC,+BAAT,EAA0CC,SAA1C,QAA2D,+BAA3D;AAEA,SAASC,eAAT,QAAgC,cAAhC;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGC,UAAU,CAACN,SAAD,EAAY,aAAZ,CAAhC;AACAO,EAAAA,QAAQ,CAACC,qBAAqB,EAAtB,CAAR;AAEAC,EAAAA,OAAO,CAACJ,aAAD,CAAP,CAAuBK,IAAvB,CAA6BC,QAAQ,IAAI;AACrC,UAAMC,cAAc,GAAGb,+BAA+B,CAACY,QAAD,CAAtD;AACAJ,IAAAA,QAAQ,CAACM,uBAAuB,CAACD,cAAD,CAAxB,CAAR;AACH,GAHD,EAGGE,KAHH,CAGUC,KAAK,IAAIR,QAAQ,CAACS,uBAAuB,CAACD,KAAK,CAACE,OAAP,CAAxB,CAH3B;AAKH;AAED,OAAO,UAAUT,qBAAV,GAAkC;AACrC,QAAMV,SAAS,CACXG,eAAe,CAACiB,uBADL,EAEXhB,qBAFW,CAAf;AAIH","sourcesContent":["import { takeEvery } from 'redux-saga/effects'\r\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\r\n\r\nimport { ShopActionTypes } from './shop.types'\r\n\r\nexport function* fetchCollectionsAsync() {\r\n    yield console.log('i am fired');\r\n\r\n    const collectionRef = collection(firestore, 'collections');\r\n    dispatch(fetchCollectionsStart())\r\n\r\n    getDocs(collectionRef).then( snapShot => {\r\n        const collectionsMap = convertCollectionsSnapshotToMap(snapShot)\r\n        dispatch(fetchCollectionsSuccess(collectionsMap));\r\n    }).catch( error => dispatch(fetchCollectionsFailure(error.message)) );\r\n\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n    yield takeEvery(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionsAsync\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}