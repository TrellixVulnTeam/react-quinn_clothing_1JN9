{"ast":null,"code":"import { signInWithPopup } from \"firebase/auth\";\nimport { onSnapshot } from \"firebase/firestore\";\nimport { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { googleSignInFailure, googleSignInSuccess } from \"./user.actions\";\nimport UserActionTypes from \"./user.types\";\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield signInWithPopup(auth, googleProvider);\n    const userRef = yield call(createUserProfileDocument, user); // const userSnapshot = yield call(onSnapshot, userRef);\n\n    const userSnapshot = yield onSnapshot(userRef, snapShot => {\n      return data = snapShot.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      })); // return ({\n      //     id: snapShot.id,\n      //     ...snapShot.data()\n      // });\n    });\n    console.log(data.id);\n    yield put(googleSignInSuccess({\n      id: data.id,\n      ...data\n    }));\n    console.log('oke'); // const channel = yield eventChannel(snapShot => onSnapshot(userRef, (snapShot)))\n\n    console.log(user);\n    console.log(userRef);\n    console.log(userSnapshot); // console.log(take(channel));\n    // yield put(googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["D:/Programming/Web/node/react-101/crwn-clothing/src/redux/user/user.sagas.js"],"names":["signInWithPopup","onSnapshot","takeLatest","put","all","call","auth","googleProvider","createUserProfileDocument","googleSignInFailure","googleSignInSuccess","UserActionTypes","signInWithGoogle","user","userRef","userSnapshot","snapShot","data","map","doc","id","console","log","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,eAAT,QAAgC,eAAhC;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,QAAyD,gBAAzD;AAGA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMb,eAAe,CAACM,IAAD,EAAOC,cAAP,CAAtC;AACA,UAAMO,OAAO,GAAG,MAAMT,IAAI,CAACG,yBAAD,EAA4BK,IAA5B,CAA1B,CAFA,CAGA;;AACA,UAAME,YAAY,GAAG,MAAMd,UAAU,CAAEa,OAAF,EAAYE,QAAD,IAAc;AAC1D,aAAOC,IAAI,GAAGD,QAAQ,CAACE,GAAT,CAAcC,GAAD,KAAU;AACjCC,QAAAA,EAAE,EAAED,GAAG,CAACC,EADyB;AAEjC,WAAGD,GAAG,CAACF,IAAJ;AAF8B,OAAV,CAAb,CAAd,CAD0D,CAK1D;AACA;AACA;AACA;AACH,KAToC,CAArC;AAWAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACG,EAAjB;AAEA,UAAMjB,GAAG,CAACO,mBAAmB,CAAC;AAAEU,MAAAA,EAAE,EAAEH,IAAI,CAACG,EAAX;AAAe,SAAGH;AAAlB,KAAD,CAApB,CAAT;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAlBA,CAmBA;;AAEAD,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ,EAvBA,CAwBA;AACA;AACH,GA1BD,CA0BE,OAAOQ,KAAP,EAAc;AACZ,UAAMpB,GAAG,CAACM,mBAAmB,CAACc,KAAD,CAApB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACnC,QAAMtB,UAAU,CAACS,eAAe,CAACc,oBAAjB,EAAuCb,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUc,SAAV,GAAsB;AACzB,QAAMtB,GAAG,CAAC,CACNC,IAAI,CAACmB,mBAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { signInWithPopup } from \"firebase/auth\";\r\nimport { onSnapshot } from \"firebase/firestore\";\r\nimport { takeLatest, put, all, call } from \"redux-saga/effects\";\r\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\r\nimport { googleSignInFailure, googleSignInSuccess } from \"./user.actions\";\r\n\r\n\r\nimport UserActionTypes from \"./user.types\";\r\n\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const { user } = yield signInWithPopup(auth, googleProvider);\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        // const userSnapshot = yield call(onSnapshot, userRef);\r\n        const userSnapshot = yield onSnapshot( userRef, (snapShot) => {\r\n            return data = snapShot.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            // return ({\r\n            //     id: snapShot.id,\r\n            //     ...snapShot.data()\r\n            // });\r\n        });\r\n\r\n        console.log(data.id)\r\n        \r\n        yield put(googleSignInSuccess({ id: data.id, ...data }))\r\n        console.log('oke');\r\n        // const channel = yield eventChannel(snapShot => onSnapshot(userRef, (snapShot)))\r\n\r\n        console.log(user);\r\n        console.log(userRef);\r\n        console.log(userSnapshot)\r\n        // console.log(take(channel));\r\n        // yield put(googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\r\n    } catch (error) {\r\n        yield put(googleSignInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all([\r\n        call(onGoogleSignInStart)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}